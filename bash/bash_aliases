# ls conveniences
function ls() { # Display an empty line for empty directories
    if [[ $(/bin/ls $@ | wc -l) -eq 0 ]]; then
        echo 
    else
        /bin/ls -G "$@"
    fi
}
alias ll='ls -Alhtr'
alias llt='ll -t' # Sort by date last modified
alias la='ls -A'
alias l='ls'

# du should always be human readable
alias du='du -h'

# Make find not suck
alias cif="find . -iname" # Case-insensitive find
function fuzzy_find() { 
    SEARCH_STR="$1"
    shift 1
    cif "*$SEARCH_STR*" "$@"
}
alias ff="fuzzy_find"

# Overwrite cd to jump up multiple levels with 'cd <# dir>..' syntax
cd() {
    if [[ "$1" == "-" ]]; then
        builtin cd "$@"
    else
        # Check if string is in '<number>..' form
        REPEAT_TIMES="${1:0:(${#1} - 2)}"
        if [[ "${1:(-2)}" == ".." ]] && [[ "${#1}" > 2 ]] && [[ $REPEAT_TIMES =~ ^-?[0-9]+$ ]] && [[ $REPEAT_TIMES -ne 0 ]]; then
            CD_STR=""
            for i in $(seq 1 $REPEAT_TIMES); do
                CD_STR="../$CD_STR"
            done
            cd "$CD_STR"
        else
            
            builtin cd "$@"
        fi
    fi
}

# Allows user to choose which lines of piped input to pass through
alias filter="~/.bash_utils/filter.py"

# Fuzzy searches for the given file, then filters output and feeds it into the given command
# $1 - Command to feed chosen file to
# $2+ - Arguments passed to fuzzy find
function use_fuzzy_filter_results() {
    "$1" `fuzzy_find "${@:2}" | filter`
}
alias uff="use_fuzzy_filter_results"
alias vff="uff vim"

# Easily copy the contents of a file
function clip() {
    cat "$@" | pbcopy
}

# Have mkdir create parent directories if they don't already exist
alias mkdir="mkdir -p"

# Make directory and cd into it
function mkdircd() { mkdir "$@"; cd "$1"; }

# === grep ===========
alias csgr='grep -I --color=auto'    # Case-sensitive grep
alias gr='csgr -i'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
function rgr() { gr -r "$@" *; }
function csrgr() { csgr -r "$@" *; }  # Case-sensitive recursive grep

# Grep chain commands
alias hgr='history | gr'
alias pgr='ps aux | gr'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Map command to open last vim session
alias   v="vim"
VIM_SESSION="~/.vim/.saved-session.vim"
alias   vims="vim -S $VIM_SESSION"

# Jobs should show PID by default
alias   jobs="jobs -l"

# TODO This should probably be moved elsewhere
# Quickly manage Palantir quickstarts
alias   quickchange="/Users/ktoday/scripts/quickchange/quickchange"

# Don't want to make srm too easy to use!
# alias srm="srm -i"

# Output redirection functions
function    unify_output() { 2>&1 "${@}"; }
function    quiet() { "${@}" 2> /dev/null; }
function    silent() { "${@}" > /dev/null 2>&1; }

# Easy SSH port forwarding
function sshl { 
    echo "ssh -L $1:localhost:$1 ${@:2}" 
    ssh -L "$1":localhost:$1 "${@:2}"
}

# Command line JSON prettifier
alias prettify-json="python -mjson.tool"

# Announces a completed task
function announce() {
	"$@"
	[[ $? == 127 ]] && return 1	# Don't speak for command not found
	VOICE_TXT=`printf "$1" | sed "s:.*/\(\.*\)::g"`" command is done"	# Speak only command name
	say -v "Vicki" "$VOICE_TXT"
}

# --- Git Commands ------------------------
# Viewing changes
alias gs="git status -sb"
alias gsh="git show"
alias gd="git diff --word-diff=color"
alias gdc="gd --cached"
alias gl="git log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all"
alias gll="git log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n'' %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all"

# Making changes
alias gb="git branch"
alias gco="git checkout"
alias ga="git add"
alias gcm="git commit"
alias gcmm="git commit -m $1"
alias gg="git commit -am $1"
alias grs="git reset"
alias grs1="git reset --soft HEAD^"

# Dealing with remotes
alias gcl="git clone"
alias gf="git fetch --prune"
alias gpll="git pull"
function gpsh() {	# Push the branch upstream if it doesn't exist; otherwise just git push
	BRANCH_NAME="$(git rev-parse --abbrev-ref HEAD)"
	[[ $(git config "branch.$BRANCH_NAME.merge") == '' ]] && git push -u origin "$BRANCH_NAME" "$@" || git push "$@"; 
}
alias gprune-local-dry-run="git branch --merged | grep -v '\*' | grep -v 'master' | grep -v 'develop'"
alias gprune-local="git branch --merged | grep -v '\*' | grep -v 'master' | grep -v 'develop' | xargs -n 1 git branch -d"

# Just because it's intuitive
alias eject="diskutil unmount"
